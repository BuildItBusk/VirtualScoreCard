@page "/signup"

@inject IHttpClientFactory httpClientFactory;

@using GolfScoreUI.Data
@using Microsoft.Net.Http.Headers
@using System.Text.Json
@using System.Text
@using System.Diagnostics
@using static System.Net.Mime.MediaTypeNames

<div class="container-fluid" style="padding: 0px;">
    <div class="container-fluid" style="padding: 0px;">
        <img src=".\gfx\golf-ball.jpg" style="max-width: 100%"/>
    </div>
    <div class="container-fluid">
        <h3 class="text-center mt-4">Create profile</h3>
        @if (userCreated)
        {
            <div style="color: green">User profile succesfully created!</div>
        }        
        @if (!string.IsNullOrWhiteSpace(errorMessage))
        {
            <div style="color: red">@errorMessage</div>
        }

        <EditForm Model="profile" OnValidSubmit="@HandleValidSubmit">
            <div class="form-floating  mt-4">
                <InputText id="name" class="form-control mb-2" @bind-Value="@profile.UserName" />
                <label for="name">Name</label>
            </div>
            
            <div class="form-floating mt-4">
                <InputText type="email" id="email" class="form-control mb-2" @bind-Value="@profile.Email" />
                <label for="email">E-mail</label>
            </div>
            
            <div class="form-floating mt-4">
                <InputText type="password" id="password" class="form-control mb-2" @bind-Value="@profile.Password" />
                <label for="password">Password</label>
            </div>

            <div>
                <button type="submit" class="btn btn-primary btn-lg mt-4" style="width: 100%">Sign up</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private NewProfile profile = new();
    private bool userCreated = false;
    private string errorMessage = "";

    private async Task HandleValidSubmit()
    {
        HttpClient api = httpClientFactory.CreateClient("api");

        var newProfileJson = new StringContent(
            JsonSerializer.Serialize(profile),
            Encoding.UTF8,
            Application.Json); 

        using var httpResponseMessage =
            await api.PostAsync("UserProfile", newProfileJson);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            errorMessage = "";
            userCreated = true;
            profile = new NewProfile();
        }
        else
        {
            errorMessage = $"Failed to create user: {(int)httpResponseMessage.StatusCode} {httpResponseMessage.ReasonPhrase}";
        }
    }
}